{"version":3,"sources":["utils/API.js","components/Nav/Nav.js","components/Footer.js","pages/Profile/Profile.js","components/List/ListItem.js","components/Card/Card.js","pages/Questions/Questions.js","pages/Question2/Question2.js","pages/Question3/Question3.js","pages/Question4/Questions4.js","pages/Question5/Question5.js","components/Header.js","base.js","components/Login.js","components/Logout.js","pages/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["API","getAnswersByUID","id","axios","get","getAll","console","log","getAnswersByQuest","userAnswer","getAnswersByIndustry","saveAnswers","post","then","catch","err","updateAnswer","Nav","react_default","a","createElement","lib","trigger","options","closeOnClick","userView","user","background","image","name","email","href","divider","Footer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","year","Date","getFullYear","className","Component","Profile","pitch","skills","passions","values","help","UID","industry","handleAnswerUpdate","setState","handleInputChange","event","_event$target","target","value","defineProperty","loadProfile","res","Answers","data","handleFormSubmitPitch","preventDefault","answer","questionOneAnswer","question","document","getElementById","handleFormSubmitSkills","handleFormSubmitPassions","handleFormSubmitValues","handleFormSubmitHelp","s","type","onChange","label","defaultValue","placeholder","disabled","onClick","src_components_Footer","ListItem","children","Cards","m","textClassName","AnswerFeed","answersIndustry","answers","loadAnswers","_this2","style","color","map","Card_Card","ListItem_ListItem","key","_id","Header","closePopover","bind","assertThisInitialized","popoverOpen","authenticated","Link","to","aria-label","app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","facebookProvider","Rebase","createClass","database","auth","FacebookAuthProvider","loginStyles","width","maxWidth","margin","border","borderRadius","padding","Login","authWithFacebook","authWithEmailPassword","redirect","signInWithPopup","error","toaster","show","intent","Intent","DANGER","message","setCurrentUser","_this3","emailInput","password","passwordInput","fetchProvidersForEmail","providers","length","createUserWithEmailAndPassword","indexOf","signInWithEmailAndPassword","loginForm","reset","WARNING","_this4","from","location","pathname","Redirect","ref","element","onSubmit","form","marginBottom","input","Logout","signOut","textAlign","position","top","left","spinner","App","currentUser","loading","removeAuthListener","onAuthStateChanged","BrowserRouter","src_components_Header","addSong","Route","exact","path","render","components_Login","assign","component","src","alt","Switch","Home","Question","Question2","Question3","Question4","Question5","Boolean","window","hostname","match","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.739d4fc3.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n    getAnswersByUID: function (id) {\n        return axios.get(\"/api/users/\" + id)\n    },\n    getAll: function(){\n        return axios.get(\"/all\", function(){\n            console.log('Hitting get route');\n        })\n    },\n    getAnswersByQuest: function (userAnswer) {\n        return axios.get(\"api/users/answers/\" + userAnswer)\n    },\n\n    //added getAnswersByIndustry to filter answers by industry\n    getAnswersByIndustry: function (userAnswer) {\n        return axios.get(\"api/users/industry/\" + userAnswer)\n    },\n    saveAnswers: function (userAnswer) {\n        return axios.post(\"api/users/answers\", userAnswer)\n            .then(console.log(userAnswer))\n            .catch(err => console.log(err))\n    },\n    updateAnswer: function (id) {\n        return axios.post(\"api/answers/\" + id)\n    }\n}\n\n","import React from \"react\";\nimport { SideNav, SideNavItem, Button } from 'react-materialize'\n\nexport default () => (\n    <SideNav\n        trigger={<Button>Navigate</Button>}\n        options={{ closeOnClick: true }}\n    >\n        <SideNavItem userView\n            user={{\n                background: 'images/sideNavPic.jpeg',\n                image: 'images/mMouse.jpg',\n                name: 'Anthony Doe',\n                email: 'jdandturk@gmail.com'\n            }}\n        />\n        <SideNavItem href='/profile'>My Questionnaire</SideNavItem>\n        <SideNavItem divider />\n        <SideNavItem href='/Questions'>30 Second Pitch</SideNavItem>\n        <SideNavItem href='/Question2'>My Skills</SideNavItem>\n        <SideNavItem href='/Question3'>My Passions</SideNavItem>\n        <SideNavItem href='/Question4'>My Values</SideNavItem>\n        <SideNavItem href='/Question5'>Help Wanted</SideNavItem>\n    </SideNav>\n)\n\n","import React, { Component } from 'react';\nimport \"./Footer.css\"\n\nclass Footer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { year: new Date().getFullYear() };\n  }\n\n  render() {\n    return (\n      <footer className=\"footer\">\n        <ul className=\"site-link\">\n          <li>\n            &copy; {this.state.year} CCSS\n          </li>\n        </ul>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport Nav from \"../../components/Nav\";\nimport { Input, Row, Button } from \"react-materialize\";\nimport \"./Profile.css\"\nimport Footer from \"../../components/Footer\"\n\nclass Profile extends Component {\n    //these are the dynamic elements on the profile page    \n    state = {\n        pitch: \"\",\n        skills: \"\",\n        passions: \"\",\n        values: \"\",\n        help: \"\",\n        UID: \"\",\n        email: \"\",\n        industry: \"\"\n    };\n\n    handleAnswerUpdate = () => {\n        this.setState({})\n    }\n\n    //waits for component to mount\n    componentDidMount() {\n        // this.loadProfile();\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    //function to load existing profile information\n    loadProfile = () => {\n        API.getAnswersByUID()\n            .then(res =>\n                this.setState({ Answers: res.data, pitch: \"\" })\n            )\n            .catch(err => console.log(err));\n    };\n\n\n    //records data when questionOneAnswer button is pressed\n    handleFormSubmitPitch = event => {\n        event.preventDefault();\n        console.log(event);\n        if (this.state.pitch) {\n            API.saveAnswers({\n                answer: this.state.pitch,\n                UID: this.state.questionOneAnswer,\n                email: this.state.email,\n                industry: this.state.industry,\n                question: document.getElementById(\"pitch\").name,\n            })\n                .catch(err => console.log(err));\n        }\n    };\n\n    handleFormSubmitSkills = event => {\n        event.preventDefault();\n        console.log(event);\n        if (this.state.skills) {\n            API.saveAnswers({\n                answer: this.state.skills,\n                UID: this.state.questionOneAnswer,\n                email: this.state.email,\n                industry: this.state.industry,\n                question: document.getElementById(\"skills\").name,\n            })\n                .catch(err => console.log(err));\n        }\n    };\n\n    handleFormSubmitPassions = event => {\n        event.preventDefault();\n        console.log(event);\n        if (this.state.passions) {\n            API.saveAnswers({\n                answer: this.state.passions,\n                UID: this.state.questionOneAnswer,\n                email: this.state.email,\n                industry: this.state.industry,\n                question: document.getElementById(\"passions\").name,\n            })\n                .catch(err => console.log(err));\n        }\n    };\n\n    handleFormSubmitValues = event => {\n        event.preventDefault();\n        console.log(event);\n        if (this.state.values) {\n            API.saveAnswers({\n                answer: this.state.values,\n                UID: this.state.questionOneAnswer,\n                email: this.state.email,\n                industry: this.state.industry,\n                question: document.getElementById(\"values\").name,\n            })\n                .catch(err => console.log(err));\n        }\n    };\n\n    handleFormSubmitHelp = event => {\n        event.preventDefault();\n        console.log(event);\n        if (this.state.help) {\n            API.saveAnswers({\n                answer: this.state.help,\n                UID: this.state.questionOneAnswer,\n                email: this.state.email,\n                industry: this.state.industry,\n                question: document.getElementById(\"help\").name,\n            })\n                .catch(err => console.log(err));\n        }\n    };\n\n    //renders our forms\n    render() {\n        return (\n            <div className=\"profileBackground\">\n                <div className=\"container profileContainer\">\n                    <Row>\n                        <h1>Questionnaire</h1>\n                    </Row>\n                    <Nav />\n\n                    <form>\n                        <Row>\n                            <Input\n                                s={12}\n                                type='select'\n                                name=\"industry\"\n                                onChange={this.handleInputChange}\n                                label=\"Industry\"\n                                defaultValue='2'>\n                                <option value='All'>All Industries</option>\n                                <option value='Music'>Music</option>\n                                <option value='Art'>Art</option>\n                                <option value='Entrepreneurship'>Entrepreneurship</option>\n                            </Input>\n                        </Row>\n                        <Row>\n                            <Input\n                                s={12}\n                                value={this.state.email}\n                                onChange={this.handleInputChange}\n                                name=\"email\"\n                                label=\"E-Mail\"\n                                placeholder=\"name@domain.com\"\n                            />\n                        </Row>\n                        <Row>\n                            <Input\n                                s={12}\n                                id=\"pitch\"\n                                value={this.state.pitch}\n                                onChange={this.handleInputChange}\n                                name=\"pitch\"\n                                label=\"30 Second Pitch\"\n                                placeholder=\"Describe yourself\"\n                            />\n                            <Button\n                                disabled={!this.state.pitch} onClick={this.handleFormSubmitPitch}>\n                                Save\n                            </Button>\n                        </Row>\n                        <Row>\n                            <Input\n                                s={12}\n                                id=\"skills\"\n                                value={this.state.skills}\n                                onChange={this.handleInputChange}\n                                name=\"skills\"\n                                label=\"My Skills\"\n                                placeholder=\"My skills include...\"\n                            />\n                            <Button\n                                disabled={!this.state.skills} onClick={this.handleFormSubmitSkills}>\n                                Save\n                        </Button>\n                        </Row>\n                        <Row>\n                            <Input\n                                s={12}\n                                id=\"passions\"\n                                value={this.state.passions}\n                                onChange={this.handleInputChange}\n                                name=\"passions\"\n                                label=\"My Passions\"\n                                placeholder=\"My passions are...\"\n                            />\n                            <Button\n                                disabled={!this.state.passions} onClick={this.handleFormSubmitPassions}>\n                                Save\n                            </Button>\n                        </Row>\n                        <Row>\n                            <Input\n                                s={12}\n                                id=\"values\"\n                                value={this.state.values}\n                                onChange={this.handleInputChange}\n                                name=\"values\"\n                                label=\"My values are...\"\n                            />\n                            <Button\n                                disabled={!this.state.values} onClick={this.handleFormSubmitValues}>\n                                Save\n                        </Button>\n                        </Row>\n                        <Row>\n                            <Input\n                                s={12}\n                                id=\"help\"\n                                value={this.state.help}\n                                onChange={this.handleInputChange}\n                                name=\"help\"\n                                label=\"I am looking for...\"\n                            />\n                            <Button\n                                disabled={!this.state.help} onClick={this.handleFormSubmitHelp}>\n                                Save\n                        </Button>\n                        </Row>\n                    </form>\n                </div>\n                <Footer />\n            </div >\n        )\n    }\n}\n\n//exports Profile for use\nexport default Profile;","import React from \"react\";\n\nexport const ListItem = props => (\n  <li className=\"list-group-item\">\n    {props.children}\n  </li>\n);","import React from \"react\";\nimport { Row, Input, Col, Card } from \"react-materialize\";\nimport \"./Card.css\"\n\n\nconst Cards = props => {\n  return (\n      <Col m={6} s={12}>\n        <Card\n          className=\"\"\n          textClassName=\"black-text\"\n        >\n          {props.children}\n        </Card>\n      </Col>\n  );\n};\n\nexport default Cards;","import React, { Component } from \"react\";\nimport { Row, Input, Button } from 'react-materialize';\nimport API from \"../../utils/API\";\nimport { List, ListItem } from \"../../components/List\";\nimport { Link } from \"react-router-dom\";\nimport Cards from \"../../components/Card\";\nimport \"./Questions.css\"\nimport Nav from \"../../components/Nav\"\nimport Footer from \"../../components/Footer\"\n\n\n\nclass AnswerFeed extends Component {\n    state = {\n        answersIndustry: [],\n        answers: [\"test1\", \"test2\"],\n        email: \"\",\n        industry: \"\"\n    };\n\n    componentDidMount() {\n        this.loadAnswers()\n    }\n\n    loadAnswers() {\n\n        API.getAnswersByQuest(\"pitch\")\n            .then(res => {\n                this.setState({\n                    answers: res.data\n                })\n            })\n\n    }\n\n    render() {\n        return (\n            <div className=\"questionBackground\">\n                <div className=\"questionHeader\">\n                    <h1 className=\"questionTitle\">Share your 30 second pitch!</h1>\n                    <Nav style={{color: \"red\"}}/>\n                </div>\n                <div className=\"container questionContainer\">\n\n                    {/* <Row>\n                        <Input\n                            s={12}\n                            type='select'\n                            name=\"industry\"\n                            onChange={this.handleInputChange}\n                            label=\"Industry\"\n                            defaultValue='2'\n                            placeholder=\"Choose Industry\">\n                            <option value='All'>All Industries</option>\n                            <option value='Music'>Music</option>\n                            <option value='Art'>Art</option>\n                            <option value='Entrepreneurship'>Entrepreneurship</option>\n                        </Input>\n                    </Row> */}\n                    {this.state.answers.map((answer) =>\n                        <Cards>\n                            <ListItem key={answer._id}>\n                                <h2>{answer.answer}</h2>\n                                <h4>by {answer.email}</h4>\n                                <h4>Industry: {answer.industry}</h4>\n                            </ListItem>\n                        </Cards>\n                    )}\n                </div>\n                <Footer />   \n            </div>\n        )\n    }\n}\n\n\nexport default AnswerFeed;\n","import React, { Component } from \"react\";\nimport { Row, Input, Button } from 'react-materialize';\nimport API from \"../../utils/API\";\nimport { List, ListItem } from \"../../components/List\";\nimport { Link } from \"react-router-dom\";\nimport Cards from \"../../components/Card\";\nimport \"./Question2.css\"\nimport Nav from \"../../components/Nav\"\n\n\n\n\nclass AnswerFeed extends Component {\n    state = {\n        answersIndustry: [],\n        answers: [\"test1\", \"test2\"],\n        email: \"\",\n        industry: \"\"\n    };\n\n    componentDidMount() {\n        this.loadAnswers()\n    }\n\n    loadAnswers() {\n\n        API.getAnswersByQuest(\"skills\")\n            .then(res => {\n                this.setState({\n                    answers: res.data\n                })\n            })\n\n    }\n\n    render() {\n        return (\n            <div className=\"question2Background\">\n                <div className=\"question2Header\">\n                    <h1 className=\"question2Title\">What are your skills?</h1>\n                    <Nav style={{color: \"red\"}}/>\n                </div>\n                <div className=\"container question2Container\">\n\n                    {/* <Row>\n                        <Input\n                            s={12}\n                            type='select'\n                            name=\"industry\"\n                            onChange={this.handleInputChange}\n                            label=\"Industry\"\n                            defaultValue='2'\n                            placeholder=\"Choose Industry\">\n                            <option value='All'>All Industries</option>\n                            <option value='Music'>Music</option>\n                            <option value='Art'>Art</option>\n                            <option value='Entrepreneurship'>Entrepreneurship</option>\n                        </Input>\n                    </Row> */}\n                    {this.state.answers.map((answer) =>\n                        <Cards>\n                            <ListItem key={answer._id}>\n                                <h2>{answer.answer}</h2>\n                                <h4>by {answer.email}</h4>\n                                <h4>Industry: {answer.industry}</h4>\n                            </ListItem>\n                        </Cards>\n                    )}\n                </div>\n\n            </div>\n        )\n    }\n}\n\n\nexport default AnswerFeed;\n","import React, { Component } from \"react\";\nimport { Row, Input, Button } from 'react-materialize';\nimport API from \"../../utils/API\";\nimport { List, ListItem } from \"../../components/List\";\nimport { Link } from \"react-router-dom\";\nimport Cards from \"../../components/Card\";\nimport \"./Question3.css\"\nimport Nav from \"../../components/Nav\"\n\n\n\n\nclass AnswerFeed extends Component {\n    state = {\n        answersIndustry: [],\n        answers: [\"test1\", \"test2\"],\n        email: \"\",\n        industry: \"\"\n    };\n\n    componentDidMount() {\n        this.loadAnswers()\n    }\n\n    loadAnswers() {\n\n        API.getAnswersByQuest(\"passions\")\n            .then(res => {\n                this.setState({\n                    answers: res.data\n                })\n            })\n\n    }\n\n    render() {\n        return (\n            <div className=\"question3Background\">\n                <div className=\"question3Header\">\n                    <h1 className=\"question3Title\">What are your passions?</h1>\n                    <Nav style={{color: \"red\"}}/>\n                </div>\n                <div className=\"container question3Container\">\n\n                    {/* <Row>\n                        <Input\n                            s={12}\n                            type='select'\n                            name=\"industry\"\n                            onChange={this.handleInputChange}\n                            label=\"Industry\"\n                            defaultValue='2'\n                            placeholder=\"Choose Industry\">\n                            <option value='All'>All Industries</option>\n                            <option value='Music'>Music</option>\n                            <option value='Art'>Art</option>\n                            <option value='Entrepreneurship'>Entrepreneurship</option>\n                        </Input>\n                    </Row> */}\n                    {this.state.answers.map((answer) =>\n                        <Cards>\n                            <ListItem key={answer._id}>\n                                <h2>{answer.answer}</h2>\n                                <h4>by {answer.email}</h4>\n                                <h4>Industry: {answer.industry}</h4>\n                            </ListItem>\n                        </Cards>\n                    )}\n                </div>\n\n            </div>\n        )\n    }\n}\n\n\nexport default AnswerFeed;\n","import React, { Component } from \"react\";\nimport { Row, Input, Button } from 'react-materialize';\nimport API from \"../../utils/API\";\nimport { List, ListItem } from \"../../components/List\";\nimport { Link } from \"react-router-dom\";\nimport Cards from \"../../components/Card\";\nimport \"./Question4.css\"\nimport Nav from \"../../components/Nav\"\n\n\n\n\nclass AnswerFeed extends Component {\n    state = {\n        answersIndustry: [],\n        answers: [\"test1\", \"test2\"],\n        email: \"\",\n        industry: \"\"\n    };\n\n    componentDidMount() {\n        this.loadAnswers()\n    }\n\n    loadAnswers() {\n\n        API.getAnswersByQuest(\"values\")\n            .then(res => {\n                this.setState({\n                    answers: res.data\n                })\n            })\n\n    }\n\n    render() {\n        return (\n            <div className=\"question4Background\">\n                <div className=\"question4Header\">\n                    <h1 className=\"question4Title\">What are your values?</h1>\n                    <Nav style={{color: \"red\"}}/>\n                </div>\n                <div className=\"container question4Container\">\n\n                    {/* <Row>\n                        <Input\n                            s={12}\n                            type='select'\n                            name=\"industry\"\n                            onChange={this.handleInputChange}\n                            label=\"Industry\"\n                            defaultValue='2'\n                            placeholder=\"Choose Industry\">\n                            <option value='All'>All Industries</option>\n                            <option value='Music'>Music</option>\n                            <option value='Art'>Art</option>\n                            <option value='Entrepreneurship'>Entrepreneurship</option>\n                        </Input>\n                    </Row> */}\n                    {this.state.answers.map((answer) =>\n                        <Cards>\n                            <ListItem key={answer._id}>\n                                <h2>{answer.answer}</h2>\n                                <h4>by {answer.email}</h4>\n                                <h4>Industry: {answer.industry}</h4>\n                            </ListItem>\n                        </Cards>\n                    )}\n                </div>\n\n            </div>\n        )\n    }\n}\n\n\nexport default AnswerFeed;\n","import React, { Component } from \"react\";\nimport { Row, Input, Button } from 'react-materialize';\nimport API from \"../../utils/API\";\nimport { List, ListItem } from \"../../components/List\";\nimport { Link } from \"react-router-dom\";\nimport Cards from \"../../components/Card\";\nimport \"./Question5.css\"\nimport Nav from \"../../components/Nav\"\n\n\n\n\nclass AnswerFeed extends Component {\n    state = {\n        answersIndustry: [],\n        answers: [\"test1\", \"test2\"],\n        email: \"\",\n        industry: \"\"\n    };\n\n    componentDidMount() {\n        this.loadAnswers()\n    }\n\n    loadAnswers() {\n\n        API.getAnswersByQuest(\"help\")\n            .then(res => {\n                this.setState({\n                    answers: res.data\n                })\n            })\n\n    }\n\n    render() {\n        return (\n            <div className=\"question5Background\">\n                <div className=\"question5Header\">\n                    <h1 className=\"question5Title\">Post a help wanted ad!</h1>\n                    <Nav style={{color: \"red\"}}/>\n                </div>\n                <div className=\"container question5Container\">\n\n                    {/* <Row>\n                        <Input\n                            s={12}\n                            type='select'\n                            name=\"industry\"\n                            onChange={this.handleInputChange}\n                            label=\"Industry\"\n                            defaultValue='2'\n                            placeholder=\"Choose Industry\">\n                            <option value='All'>All Industries</option>\n                            <option value='Music'>Music</option>\n                            <option value='Art'>Art</option>\n                            <option value='Entrepreneurship'>Entrepreneurship</option>\n                        </Input>\n                    </Row> */}\n                    {this.state.answers.map((answer) =>\n                        <Cards>\n                            <ListItem key={answer._id}>\n                                <h2>{answer.answer}</h2>\n                                <h4>by {answer.email}</h4>\n                                <h4>Industry: {answer.industry}</h4>\n                            </ListItem>\n                        </Cards>\n                    )}\n                </div>\n\n            </div>\n        )\n    }\n}\n\n\nexport default AnswerFeed;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport \"./Header.css\"\n// import { Popover, PopoverInteractionKind, Position } from '@blueprintjs/core'\n\nclass Header extends Component {\n  constructor(props) {\n    super(props)\n    this.closePopover = this.closePopover.bind(this)\n    this.state = {\n      popoverOpen: false\n    }\n  }\n\n  closePopover() {\n    this.setState({ popoverOpen: false })\n  }\n\n  render() {\n    return (\n      <div className=\"titleBody\">\n      <nav className=\"pt-navbar\">\n        {\n          this.props.authenticated\n          ? (\n            <div className=\"pt-navbar-group pt-align-right\">\n              <h1 className=\"title\">Chicago Community Skill Share</h1>\n              <a href=\"/profile\"><button className=\"pt-button pt-minimal pt-icon-annotation\">Questionnaire</button></a>\n              <Link className=\"pt-button pt-minimal pt-icon-log-out logButton\" to=\"/logout\" aria-label=\"Log Out\">Logout</Link>             \n            </div>\n          )\n            : (\n              <div className=\"pt-navbar-group pt-align-right\">\n                <h1 className=\"title\">Chicago Community Skill Share</h1>\n                <Link className=\"pt-button pt-intent-primary logButton\" to=\"/login\" style={{color: \"black\"}}>Register/Log In</Link>\n              </div>\n            )\n        }\n      </nav>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import Rebase from \"re-base\";\r\nimport firebase from \"firebase\";\r\nimport {} from \"dotenv/config\";\r\n\r\nconst config = {\r\n  // apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n  // authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n  // databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\r\n  // projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  // storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  // messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID\r\n\r\n  apiKey: \"AIzaSyDT2uchkwruMbZksYczEmpGvAQImtolb8w\",\r\n  authDomain: \"ccss-a276b.firebaseapp.com\",\r\n  databaseURL: \"https://ccss-a276b.firebaseio.com\",\r\n  projectId: \"ccss-a276b\",\r\n  storageBucket: \"ccss-a276b.appspot.com\",\r\n  messagingSenderId: \"717832613113\"\r\n};\r\n\r\nconst app = firebase.initializeApp(config);\r\nconst base = Rebase.createClass(app.database());\r\nconst facebookProvider = new firebase.auth.FacebookAuthProvider();\r\n\r\nexport { app, base, facebookProvider };\r\n","import React, { Component } from \"react\";\nimport { Redirect, Route, Switch, Link } from \"react-router-dom\";\nimport { Toaster, Intent } from \"@blueprintjs/core\";\nimport { app, facebookProvider } from \"../base\";\nimport Profile from \"../pages/Profile\";\n\nconst loginStyles = {\n  width: \"90%\",\n  maxWidth: \"315px\",\n  margin: \"20px auto\",\n  border: \"1px solid #ddd\",\n  borderRadius: \"5px\",\n  padding: \"10px\"\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.authWithFacebook = this.authWithFacebook.bind(this);\n    this.authWithEmailPassword = this.authWithEmailPassword.bind(this);\n    this.state = {\n      redirect: false\n    };\n  }\n\n  authWithFacebook() {\n    app\n      .auth()\n      .signInWithPopup(facebookProvider)\n      .then((user, error) => {\n        if (error) {\n          this.toaster.show({\n            intent: Intent.DANGER,\n            message: \"Unable to sign in with Facebook\"\n          });\n        } else {\n          this.props.setCurrentUser(user);\n          this.setState({ redirect: true });\n        }\n      });\n  }\n\n  redirectFalse() {\n    this.setState({ redirect: false });\n  }\n\n  authWithEmailPassword(event) {\n    event.preventDefault();\n\n    const email = this.emailInput.value;\n    const password = this.passwordInput.value;\n\n    app\n      .auth()\n      .fetchProvidersForEmail(email)\n      .then(providers => {\n        if (providers.length === 0) {\n          // create user\n          return app.auth().createUserWithEmailAndPassword(email, password);\n        } else if (providers.indexOf(\"password\") === -1) {\n          // they used facebook\n          this.loginForm.reset();\n          this.toaster.show({\n            intent: Intent.WARNING,\n            message: \"Try alternative login.\"\n          });\n        } else {\n          // sign user in\n          return app.auth().signInWithEmailAndPassword(email, password);\n        }\n      })\n      .then(user => {\n        if (user && user.user.email) {\n          this.loginForm.reset();\n          this.props.setCurrentUser(user);\n          this.setState({ redirect: true });\n        }\n      })\n      .catch(error => {\n        this.toaster.show({ intent: Intent.DANGER, message: error.message });\n      });\n  }\n\n  render() {\n    const { from } = this.props.location.state || { from: { pathname: \"/\"} };\n    if (this.state.redirect === true) {\n      return <Redirect to={from} />\n    }\n\n    return (\n          <div style={loginStyles}>\n            <Toaster\n              ref={element => {\n                this.toaster = element;\n              }}\n            />\n            {/* <button style={{width: \"100%\"}} className=\"pt-button pt-intent-primary\" onClick={() => { this.authWithFacebook() }}>Log In with Facebook</button> */}\n            {/* <hr style={{marginTop: \"10px\", marginBottom: \"10px\"}}/> */}\n            <form\n              onSubmit={event => {\n                this.authWithEmailPassword(event);\n              }}\n              ref={form => {\n                this.loginForm = form;\n              }}\n            >\n              <div\n                style={{ marginBottom: \"10px\" }}\n                className=\"pt-callout pt-icon-info-sign\"\n              >\n                <h5>Note</h5>\n                If you don't have an account already, this form will create your\n                account.\n              </div>\n              <label className=\"pt-label\">\n                Email\n                <input\n                  style={{ width: \"100%\" }}\n                  className=\"pt-input\"\n                  name=\"email\"\n                  type=\"email\"\n                  ref={input => {\n                    this.emailInput = input;\n                  }}\n                  placeholder=\"Email\"\n                />\n              </label>\n              <label className=\"pt-label\">\n                Password\n                <input\n                  style={{ width: \"100%\" }}\n                  className=\"pt-input\"\n                  name=\"password\"\n                  type=\"password\"\n                  ref={input => {\n                    this.passwordInput = input;\n                  }}\n                  placeholder=\"Password\"\n                />\n              </label>\n              <input\n                style={{ width: \"100%\" }}\n                type=\"submit\"\n                className=\"pt-button pt-intent-primary\"\n                value=\"Log In\"\n              />\n            </form>\n          </div>\n        );\n    \n\n    // if (this.state.redirect === true) {\n    //   console.log(\"huuuuuu\");\n    //   // this.redirectFalse()\n    //   return (\n    //     // this.setState({ redirect: false }),\n    //     <Redirect to=\"/profile\" />,\n    //     <Profile />  //comment    \n    //   );\n     \n    // } \n    // if (this.state.redirect === false) {\n    //   return (\n    //     <div style={loginStyles}>\n    //       <Toaster\n    //         ref={element => {\n    //           this.toaster = element;\n    //         }}\n    //       />\n    //       {/* <button style={{width: \"100%\"}} className=\"pt-button pt-intent-primary\" onClick={() => { this.authWithFacebook() }}>Log In with Facebook</button> */}\n    //       {/* <hr style={{marginTop: \"10px\", marginBottom: \"10px\"}}/> */}\n    //       <form\n    //         onSubmit={event => {\n    //           this.authWithEmailPassword(event);\n    //         }}\n    //         ref={form => {\n    //           this.loginForm = form;\n    //         }}\n    //       >\n    //         <div\n    //           style={{ marginBottom: \"10px\" }}\n    //           className=\"pt-callout pt-icon-info-sign\"\n    //         >\n    //           <h5>Note</h5>\n    //           If you don't have an account already, this form will create your\n    //           account.\n    //         </div>\n    //         <label className=\"pt-label\">\n    //           Email\n    //           <input\n    //             style={{ width: \"100%\" }}\n    //             className=\"pt-input\"\n    //             name=\"email\"\n    //             type=\"email\"\n    //             ref={input => {\n    //               this.emailInput = input;\n    //             }}\n    //             placeholder=\"Email\"\n    //           />\n    //         </label>\n    //         <label className=\"pt-label\">\n    //           Password\n    //           <input\n    //             style={{ width: \"100%\" }}\n    //             className=\"pt-input\"\n    //             name=\"password\"\n    //             type=\"password\"\n    //             ref={input => {\n    //               this.passwordInput = input;\n    //             }}\n    //             placeholder=\"Password\"\n    //           />\n    //         </label>\n    //         <input\n    //           style={{ width: \"100%\" }}\n    //           type=\"submit\"\n    //           className=\"pt-button pt-intent-primary\"\n    //           value=\"Log In\"\n    //         />\n    //       </form>\n    //     </div>\n    //   );\n    // }\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Spinner } from '@blueprintjs/core'\nimport { app } from '../base'\n\nclass Logout extends Component {\n  constructor() {\n    super()\n    this.state = {\n      redirect: false\n    }\n  }\n\n  componentWillMount() {\n    app.auth().signOut().then((user) => {\n      this.setState({ redirect: true })\n    })\n  }\n\n  render() {\n    if (this.state.redirect === true) {\n      return <Redirect to=\"/\" />\n    }\n\n    return (\n      <div style={{ textAlign: \"center\", position: \"absolute\", top: \"25%\", left: \"50%\" }}>\n        <h3>Logging Out</h3>\n        <Spinner />\n      </div>\n    )\n  }\n}\n\nexport default Logout\n","import React, { Component } from \"react\";\nimport { Navbar, NavItem, Row, Col, Input, Button } from \"react-materialize\";\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\n// import { Spinner } from \"@blueprintjs/core\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport Login from \"../../components/Login\";\nimport Logout from \"../../components/Logout\";\nimport { app, base } from \"../../base\";\nimport \"./Home.css\";\n// import {} from 'dotenv/config';\n\n// function AuthenticatedRoute({component: Component, authenticated, ...rest}) {\n//   return (\n//     <Route\n//       {...rest}\n//       render={(props) => authenticated === true\n//           ? <Component {...props} {...rest} />\n//           : <Redirect to={{pathname: '/login', state: {from: props.location}}} /> } />\n//   )\n// }\n\n// function ShowRoute({component: Component, items, param, ...rest}) {\n//   return (\n//     <Route\n//       {...rest}\n//       render={({match, ...props}) => {\n//         if (rest.requireAuth === true && !rest.authenticated) {\n//           return (\n//             <Redirect to={{pathname: '/login', state: {from: props.location}}} />\n//           )\n//         }\n\n//         const item = items[match.params[param]]\n//         if (item) {\n//           return <Component item={item} {...props} match={match} {...rest}/>\n//         } else {\n//           return <h1>Not Found</h1>\n//         }\n//       }}\n//     />\n//   )\n// }\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.setCurrentUser = this.setCurrentUser.bind(this);\n    this.state = {\n      authenticated: false,\n      currentUser: null,\n      loading: true\n    };\n  }\n\n  setCurrentUser(user) {\n    if (user) {\n      this.setState({\n        currentUser: user,\n        authenticated: true\n      });\n      console.log(this.state.currentUser);\n    } else {\n      this.setState({\n        currentUser: null,\n        authenticated: false\n      });\n    }\n  }\n\n  componentWillMount() {\n    this.removeAuthListener = app.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          authenticated: true,\n          currentUser: user,\n          loading: false\n        });\n      } else {\n        this.setState({\n          authenticated: false,\n          currentUser: null,\n          loading: false\n        });\n\n        // base.removeBinding(this.songsRef);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.removeAuthListener();\n    // base.removeBinding(this.songsRef);\n  }\n\n  render() {\n    // if (this.state.loading === true) {\n    //   return (\n    //     <div\n    //       style={{\n    //         textAlign: \"center\",\n    //         position: \"absolute\",\n    //         top: \"25%\",\n    //         left: \"50%\"\n    //       }}\n    //     >\n    //       <h3>Loading</h3>\n    //       <Spinner />\n    //     </div>\n    //   );\n    // }\n\n    return (\n      <div className=\"homeBody\">\n        <BrowserRouter>\n          <div>\n            <Header\n              addSong={this.addSong}\n              authenticated={this.state.authenticated}\n            />\n            <div className=\"main-content\" style={{ padding: \"1em\" }}>\n              <div className=\"workspace\">\n                <Route\n                  exact\n                  path=\"/login\"\n                  render={props => {\n                    return (\n                      <Login setCurrentUser={this.setCurrentUser} {...props} />\n                    );\n                  }}\n                />\n                <Route exact path=\"/logout\" component={Logout} />\n                {/* <AuthenticatedRoute\n                  exact\n                  path=\"/songs\"\n                  authenticated={this.state.authenticated}\n                  component={SongList}\n                  songs={this.state.songs} />\n                <ShowRoute\n                  path=\"/songs/:songId\"\n                  component={ChordEditor}\n                  authenticated={this.state.authenticated}\n                  requireAuth={true}\n                  param=\"songId\"\n                  updateSong={this.updateSong}\n                  items={this.state.songs} /> */}\n              </div>\n            </div>\n          </div>\n        </BrowserRouter>\n        <div className=\"homeContainer\">\n          <img\n            src=\"./images/chicago.jpg\"\n            width=\"100%\"\n            // height=\"500px\"\n            alt=\"chicago\"\n          />\n          <a href=\"/profile\"><h1 className=\"homePageTitle\">Skill Share Free Questionnaire</h1></a>\n          <div className=\"container\">\n            <div className=\"hero\">\n              {/* <video width=\"100vw\" height=\"100vh\" controls>\n                <source src=\"movie.mp4\" type=\"video/mp4\" />\n              </video> */}\n              {/* <Row>\n                <Input s={6} label=\"Email\" />\n                <Input s={6} label=\"Password (Must be 6 characters or more)\" />\n                <Button waves=\"light\" id=\"signUpButton\">\n                  Sign up\n                </Button>\n                <Button waves=\"light\" id=\"signInButton\">\n                  Sign in\n                </Button>\n              </Row> */}\n            </div>\n            {/* <div className=\"divider\" /> */}\n            <Row>\n              <Col s={6} className=\"grid-example\">\n                {/* <img src=\"./images/all-hands.jpg\" width=\"380px\" alt=\"all hands\" /> */}\n                {/* <img\n                  src=\"./images/market.jpg\"\n                  width=\"380px\"\n                  height=\"380px\"\n                  alt=\"all hands\"\n                /> */}\n              </Col>\n              <Col s={12} className=\"grid-example\">\n                <div className=\"mainPageParagraphOne\">\n                  <h1>In hand new connections</h1>\n                  <h3>Free to use!</h3>\n                  <p>\n                    We're three friends attending a Northwestern Bootcamp and we\n                    were challenged to make an app that has unique utility. To\n                    achieve this we created a way to speed network online. Using\n                    the Chicago Community Skill Share (CCSS) you can promote\n                    yourself and find partners, collaborators, and friends. It's\n                    free to use for anyone.\n                  </p>\n                </div>\n              </Col>\n            </Row>\n            <Row>\n              <Col s={12} className=\"grid-example\">\n                <div className=\"mainPageParagraphTwo\">\n                  <h1>Online Speed Networking</h1>\n                  <p>\n                    Answer 5 quick questions and then browse other people's\n                    answers. See what skills people in your area are offering.\n                    Post and find help wanted ads. Meet passionate people. Make\n                    new connections.\n                  </p>\n                </div>\n              </Col>\n              <Col s={6} className=\"grid-example\">\n                {/* <img\n                  src=\"./images/market.jpg\"\n                  width=\"380\"\n                  height=\"380px\"\n                  alt=\"market\"\n                /> */}\n              </Col>\n            </Row>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// import React, { Component } from \"react\";\n// import { Navbar, NavItem, Row, Col, Input, Button } from 'react-materialize'\n\n// class Authentication extends Component {\n//     // add firebase here\n//     // add firebase here\n//     // add firebase here\n\n//     render() {\n//         return (\n//             <div>\n//                 <Navbar brand='Chicago Community Skill Share' right>\n//                     <NavItem href='#signInButton'>Sign in</NavItem>\n//                     <NavItem href='#signUpButton'>Sign up</NavItem>\n//                 </Navbar>\n//                 <div className=\"container\">\n//                     <div className=\"hero\">\n//                         <video width=\"100vw\" height=\"100vh\" controls>\n//                             <source src=\"movie.mp4\" type=\"video/mp4\"></source>\n//                         </video>\n//                         <Row>\n//                             <Input s={6} label=\"Email\" />\n//                             <Input s={6} label=\"Password (Must be 6 characters or more)\" />\n//                             <Button waves='light' id=\"signUpButton\">Sign up</Button>\n//                             <Button waves='light' id=\"signInButton\">Sign in</Button>\n//                         </Row>\n//                     </div>\n//                     <div className=\"divider\"></div>\n//                     <Row>\n//                         <Col s={6} className='grid-example'>\n//                             <img src=\"./images/all-hands.jpg\" alt=\"all hands\" />\n//                         </Col>\n//                         <Col s={6} className='grid-example'>\n//                             <h1>In hand new connections</h1>\n//                             <h3>Free to use!</h3>\n//                             <p>We're three friends attending a Northwestern Bootcamp and we were challenged to make an app that has unique utility. To achieve this we created a way to speed network online. Using the Chicago Community Skill Share (CCSS) you can promote yourself and find partners, collaborators, and friends. It's free to use for anyone.</p>\n//                         </Col>\n//                     </Row>\n//                     <Row>\n//                         <Col s={6} className='grid-example'>\n//                             <h1>Online Speed Networking</h1>\n//                             <p>Answer 5 quick questions and then browse other people's answers. See what skills people in your area are offering. Post and find help wanted ads. Meet passionate people. Make new connections.</p>\n//                         </Col>\n//                         <Col s={6} className='grid-example'>\n//                             <img src=\"./pages/Home/images/market.jpg\" alt=\"market\" />\n//                         </Col>\n//                     </Row>\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n\n// export default Authentication;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\n// import Nav from \"./components/Nav\";\nimport Profile from \"./pages/Profile\";\nimport Question from \"./pages/Questions\";\nimport Question2 from \"./pages/Question2\";\nimport Question3 from \"./pages/Question3\";\nimport Question4 from \"./pages/Question4\";\nimport Question5 from \"./pages/Question5\";\nimport Home from \"./pages/Home\";\n\n\nconst App = () => (\n  <Router>\n    <div className=\"App\">\n      \n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/profile\" component={Profile} />\n        <Route exact path=\"/questions\" component={Question} />\n        <Route exact path=\"/question2\" component={Question2} />\n        <Route exact path=\"/question3\" component={Question3} />\n        <Route exact path=\"/question4\" component={Question4} />\n        <Route exact path=\"/question5\" component={Question5} />\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'normalize.css/normalize.css';\nimport '@blueprintjs/core/dist/blueprint.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}